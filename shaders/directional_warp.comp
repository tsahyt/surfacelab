#version 460

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0) uniform Params {
    float intensity;
    float angle;
};

layout(set = 0, binding = 1) uniform texture2D t_Input;
layout(set = 0, binding = 2) uniform texture2D t_Strength;
layout(set = 0, binding = 3) uniform sampler Sampler;
layout(set = 0, binding = 4, rgba16f) uniform image2D t_Out;

void main() {
    ivec2 idx = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    ivec2 resolution = imageSize(t_Out);
    vec2 uv = vec2(float(idx.x) / float(resolution.x), float(idx.y) / float(resolution.y));

    vec2 direction = normalize(vec2(cos(angle), sin(angle)));
    float dist = abs(texture(sampler2D(t_Strength, Sampler), uv).r) - 0.5;
    vec4 color = texture(sampler2D(t_Input, Sampler), uv + direction * intensity * dist);

    imageStore(t_Out, idx, color);
}
