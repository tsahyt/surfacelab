#version 460

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler Sampler;
layout(set = 0, binding = 1) uniform texture2D rendered;
layout(set = 0, binding = 2, rgba32f) uniform image2D out_image;

layout(push_constant) uniform constants_t {
    float current_sample;
} constants;

void main() {
    ivec2 resolution = imageSize(out_image);
    ivec2 idx = ivec2(gl_GlobalInvocationID.xy);
    vec3 col = texelFetch(sampler2D(rendered, Sampler), idx, 0).rgb;

    col /= constants.current_sample;

    // Light Transform
    col /= (col + vec3(1.));
    col = pow(col, vec3(1. / 1.2));

    imageStore(out_image, idx, vec4(col, 1.));
}
