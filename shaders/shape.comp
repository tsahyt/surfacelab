#version 460

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0) uniform Params {
    uint shape;
    float radius;
    float width;
    float height;
};
layout(set = 0, binding = 1, r32f) uniform image2D t_Out;

const uint SHAPE_CIRCLE = 0;
const uint SHAPE_BOX = 1;

const float PI = 3.14159265359;

float sd_circle(vec2 p, float r) {
    return length(p) - r;
}

float sd_box(vec2 p, vec2 b) {
    vec2 d = abs(p) - b;
    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);
}

void main() {
    ivec2 idx = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    ivec2 resolution = imageSize(t_Out);
    vec2 uv = vec2(float(idx.x) / float(resolution.x), float(idx.y) / float(resolution.y));
    uv -= .5;

    float sdf = 0.;

    switch(shape) {
        case SHAPE_CIRCLE:
            sdf = sd_circle(uv, radius);
            break;
        case SHAPE_BOX:
            sdf = sd_box(uv, vec2(width, height));
            break;
    }

    imageStore(t_Out, idx, vec4(sdf, sdf, sdf, 1.));
}
