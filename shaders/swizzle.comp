#version 460

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0) uniform Params {
    uint channel_r;
    uint channel_g;
    uint channel_b;
};

layout(set = 0, binding = 1) uniform texture2D t_Color1;
layout(set = 0, binding = 2) uniform sampler Sampler;
layout(set = 0, binding = 3, rgba16f) uniform image2D t_Out;

float channel_color(uint channel, vec4 color_in) {
    switch (channel) {
        case 0:
            return color_in.r;
        case 1:
            return color_in.g;
        case 2:
            return color_in.b;
        case 3:
            return 1.0;
    }

    return 0.;
}

void main() {
    ivec2 idx = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    ivec2 resolution = imageSize(t_Out);
    vec2 uv = vec2(float(idx.x) / float(resolution.x), float(idx.y) / float(resolution.y));

    vec4 color_in = texture(sampler2D(t_Color1, Sampler), uv);

    vec4 color_out = vec4(
        channel_color(channel_r, color_in),
        channel_color(channel_g, color_in),
        channel_color(channel_b, color_in),
        1.0
    );

    imageStore(t_Out, idx, color_out);
}
